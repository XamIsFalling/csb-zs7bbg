{"version":3,"sources":["App.js","index.js"],"names":["App","useState","quotes","setQuotes","colors","textRef","useRef","getQuote","fetch","then","res","json","data","randomNum","Math","floor","random","length","useEffect","current","style","color","className","id","ref","text","author","onClick","target","rel","href","encodeURI","rootElement","document","getElementById","createRoot","render"],"mappings":"mKAuDeA,EApDH,WACV,MAA4BC,mBAAS,KAArC,mBAAOC,EAAP,KAAeC,EAAf,KACIC,EAAS,CAAC,UAAW,UAAW,UAAW,WACzCC,EAAUC,mBAEVC,EAAW,WACfC,MAAM,+BACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,MAAb,IACLF,MAAK,SAACG,GACL,IAAIC,EAAYC,KAAKC,MAAMD,KAAKE,SAAWJ,EAAKK,QAChDd,EAAUS,EAAKC,GAChB,GACJ,EAWD,OATAK,qBAAU,WACRX,GACD,GAAE,IAEHW,qBAAU,WACRb,EAAQc,QAAQC,MAAMC,MACpBjB,EAAOU,KAAKC,MAAMD,KAAKE,SAAWZ,EAAOa,QAC5C,GAAE,CAACf,IAGF,qBAAKoB,UAAU,MAAf,SACE,qBAAKC,GAAG,YAAR,SACE,sBAAKA,GAAG,OAAR,UACE,mBAAGC,IAAKnB,EAAR,SAAkBH,EAAOuB,OACzB,qBAAKF,GAAG,SAAR,SACE,4BAAIrB,EAAOwB,WAEb,sBAAKJ,UAAU,SAAf,UACE,wBAAQK,QAASpB,EAAUgB,GAAG,YAA9B,uBAGA,mBACEK,OAAO,SACPC,IAAI,aACJN,GAAG,cACHO,KAAMC,UAAU,4CAAD,OAC+B7B,EAAOuB,OALvD,4BAeX,EChDKO,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,cAAC,EAAD,M","file":"static/js/main.e836a037.chunk.js","sourcesContent":["import \"./styles.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\n\nconst App = () => {\n  const [quotes, setQuotes] = useState(\" \");\n  let colors = [\"#fcba03\", \"#30fc03\", \"#03cafc\", \"#a103fc\"];\n  const textRef = useRef();\n\n  const getQuote = () => {\n    fetch(\"https://type.fit/api/quotes\")\n      .then((res) => res.json())\n      .then((data) => {\n        let randomNum = Math.floor(Math.random() * data.length);\n        setQuotes(data[randomNum]);\n      });\n  };\n\n  useEffect(() => {\n    getQuote();\n  }, []);\n\n  useEffect(() => {\n    textRef.current.style.color =\n      colors[Math.floor(Math.random() * colors.length)];\n  }, [quotes]);\n\n  return (\n    <div className=\"App\">\n      <div id=\"quote-box\">\n        <div id=\"text\">\n          <p ref={textRef}>{quotes.text}</p>\n          <div id=\"author\">\n            <p>{quotes.author}</p>\n          </div>\n          <div className=\"button\">\n            <button onClick={getQuote} id=\"new-quote\">\n              Get Quote\n            </button>\n            <a\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              id=\"tweet-quote\"\n              href={encodeURI(\n                `http://www.twitter.com/intent/tweet?text=${quotes.text}`\n              )}\n            >\n              tweet\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}